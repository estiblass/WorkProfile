name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: esti563/workprofile

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        run: pytest

  docker-build:
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: 1.0.${{ github.run_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t $IMAGE_NAME:${IMAGE_TAG} .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:${IMAGE_TAG}

  kubernetes-test:
    needs: docker-build
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: 1.0.${{ github.run_number }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup kind cluster (updated)
        uses: helm/kind-action@v1
        with:
          version: v0.20.0
          node_image: kindest/node:v1.28.0
          wait: 300s

      - name: Load Docker image into kind
        run: kind load docker-image $IMAGE_NAME:${IMAGE_TAG}

      - name: Deploy MySQL manifests
        run: |
          kubectl apply -f k8s/mysql-secret.yaml
          kubectl apply -f k8s/mysql-statefulset.yaml
          kubectl apply -f k8s/mysql-service.yaml
          kubectl wait --for=condition=ready pod/mysql-0 --timeout=600s

      - name: Deploy WorkProfile manifests
        run: |
          kubectl apply -f k8s/workprofile-configmap.yaml
          kubectl apply -f k8s/workprofile-deployment.yaml
          kubectl apply -f k8s/workprofile-service.yaml
          kubectl wait --for=condition=available deployment/workprofile --timeout=600s

      - name: Test WorkProfile app in Kubernetes
        run: |
          kubectl port-forward deployment/workprofile 5000:5000 &
          FORWARD_PID=$!
          sleep 20
          curl -f http://localhost:5000/ && echo "✓ Kubernetes app works"
          curl -f http://localhost:5000/health && echo "✓ Kubernetes health works"
          curl -s http://localhost:5000/health | grep "Database: Healthy" && echo "✓ Kubernetes database works"
          kill $FORWARD_PID

  deploy:
    needs: kubernetes-test
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        run: echo "Production deployment steps go here"
